\documentclass[12pt]{article}

\usepackage[margin=1.0in]{geometry}

\title{Interest Rate Models in \texttt{StocVal}}
\author{Nathan Esau}
\date{\today}

\begin{document}
\SweaveOpts{concordance=TRUE}

\maketitle

To perform the valuation, the 1-factor hull white interest rate model was chosen.
To calibrate this model, the following term structure for USD rates on treasury bonds 
was used.

<<echo=TRUE>>=
library(StocVal)
print(termStruct, row.names=F)
@

Notice that we do not have information on bonds for all the terms between 1 and 30.
However, we can use interpolation to approximate the yields for such bonds.

<<echo=TRUE>>=
termStruct.out <- cubic_spline(termStruct)
print(termStruct.out, row.names=F)
@

Next, we would like to have information on longer term bonds. To do so, we will
need to ``extend'' the yield curve. There are several ways to do this, but 
the Neilson and Siegel method is used here.

<<echo=TRUE>>=
NS_paramsDF <- data.frame(variable=c("m", "B0", "B1", "B2",
  "tau1", "tau2"), value=c(NS_params[1], NS_params[2], 
  NS_params[3], NS_params[4], NS_params[5], NS_params[6]))
print(NS_paramsDF, row.names=F)
termStruct.extension <- curve_extensionNS(termStruct.out)
print(termStruct.extension, row.names=F)
@

The following parameters were used for the hull white model\footnote{The \texttt{srinput} 
dataset as well as many other datasets used were defined in the package code file 
\texttt{data.R}}

<<echo=TRUE>>=
srinputDF <- data.frame(variable=c("b", "tau", "# scenarios", 
  "projection years",  "Random no. seed"), value=c(srinput[1], 
  srinput[2],srinput[3], srinput[4], srinput[5]))
print(srinputDF, row.names=F)
@

1000 scenarios were then generated using the hull white model. The first five
scenarios are plotted below.

<<echo=TRUE, fig=TRUE>>=
hw.out <- hull_white(srinput, termStruct.extension, termofyield=1)
plot(x=seq(0,100-4,1),y=hw.out[1,1:(100-3)],xlab="Time", ylab="Interest Rate", 
  type='l', col=1, ylim=c(0,0.20), main="Hull White")
for(i in 2:5)
  lines(x=seq(0,100-4,1),y=hw.out[i,1:(100-3)],xlab="Time", 
    ylab="Interest Rate", type='l', col=i)
@

For each scenario, we need to derive bond prices. The first five 
scenarios are plotted below.

<<echo=TRUE, fig=TRUE>>=
hw.bond <- hull_whiteBond(hw.out)
plot(x=seq(0,99,1),y=hw.bond[1,],xlab="Time", ylab="Bond Price", type='l', 
  col=1, ylim=c(0,1), main="Hull White Bond")
for(i in 2:5)
  lines(x=seq(0,99,1),y=hw.bond[i,],xlab="Time", ylab="Bond Price", type='l', 
    col=i)
@

The interest rates shown above represent the one year interest rate prevailing
at a particular time (plotted on the $x$-axis). Using these rates, we can 
estimate the $n$-year rates prevailing at a particular time. The first five 
scenarios for 5-year rates are plotted below.

<<echo=TRUE, fig=TRUE>>=
nyearZero.out <- nyearZero(hw.out,termStruct.extension,srinput,term = 5)
plot(x=seq(0,(100-5-3),1),y=nyearZero.out[1,1:(100-5-2)],xlab="Time", 
  ylab="N-year zero rate", type='l', col=1, ylim=c(0,0.20), 
  main="N-year zero rates (term=5)")
for(i in 2:5)
  lines(x=seq(0,(100-5-3),1),y=nyearZero.out[i,1:(100-5-2)],xlab="Time", 
    ylab="N-year zero rate", type='l', col=i)
@

In addition to the interest rates, we can also like to generate scenarios
for credit rates, equity returns, and inflation rates. The credit rates 
were also produced using a 1-factor hull white model. Equity returns and 
inflation rates were produced using a lognormal model.

<<echo=TRUE, fig=TRUE>>=
credit_spread <- rep(0.01, 100) # expected value
crspinputDF <- data.frame(variable=c("b", "tau", "# scenarios", 
  "projection years",  "Random no. seed"), value=c(crspinput[1], 
  crspinput[2], crspinput[3], crspinput[4], crspinput[5]))
print(crspinputDF, row.names=F)
hw.out2 <- hull_white(crspinput, credit_spread, termofyield=1) 
plot(x=seq(0,100-3,1),y=hw.out2[1,1:(100-2)],xlab="Time", 
     ylab="Credit Rate", type='l', col=1, ylim=c(0,0.05), main="Credit Rate")
for(i in 2:5)
  lines(x=seq(0,100-3,1),y=hw.out2[i,1:(100-2)],xlab="Time", 
    ylab="Credit Rate", type='l', col=i)
print(volterm.equity) # eq. volatility assumption for different term lengths
ers.out <- ers(rpi, volterm.equity, termStruct.extension) # risk premium = 0 
plot(x=seq(1,100,1),y=ers.out[1,],xlab="Time", ylab="Excess Equity Return", 
  type='l', col=1, ylim=c(-0.5,1.2), main="Excess Equity Return")
for(i in 2:5)
  lines(x=seq(1,100,1),y=ers.out[i,],xlab="Time", ylab="Excess Equity Return", 
    type='l', col=i)
ersTotal.out <- ersTotal(hw.out, ers.out)
plot(x=seq(1,100,1),y=ersTotal.out[1,],xlab="Time", ylab="Equity Total Return", 
     type='l', col=1, ylim=c(-0.5,1.2), main="Equity Total Return")
for(i in 2:5)
  lines(x=seq(1,100,1),y=ersTotal.out[i,],xlab="Time", 
    ylab="Equity Total Return", type='l', col=i)
print(inflation_mean) # expected inflation
print(volterm.inflation) # inflation volatility assumption
inflationrs.out <- inflationrs(inflation_in, inflation_mean, volterm.inflation)
plot(x=seq(1,100,1),y=inflationrs.out[1,],xlab="Time", ylab="Inflation Rate", 
  type='l', col=1, ylim=c(-0.35,0.5), main="Inflation")
for(i in 2:5)
  lines(x=seq(1,100,1),y=inflationrs.out[i,],xlab="Time", ylab="Inflation Rate", 
    type='l', col=i)
@

When generating the stochastic scenarios used in the valuation, we need
to consider the correlation between the interest rate, the credit spread,
the excess equity return and the inflation rate. In order to generate
the scenarios, we need to find the cholesky decomposition of the correlation
matrix between these variables.

<<echo=TRUE>>=
cholinputDF <- data.frame(cholinput)
names(cholinputDF) <- c("short_rate", "credit_spread", "excess_return", 
  "inflation_rate")
row.names(cholinputDF) <- c("short_rate", "credit_spread", "excess_return",
  "inflation_rate")
print(cholinputDF)
cholesky.out <- cholesky(cholinput)
print(cholesky.out)
@

We can then calculate stochastic scenarios for each of these variables. 
The plot for the first five scenarios for each variable is shown below.

% multiple sweave plots in one code chunk 
% -> see http://www.statistik.lmu.de/~leisch/Sweave/FAQ.html#x1-11000A.9
<<echo=TRUE, results=tex>>=
esga.out <- esga(esgin, credit_spread, volterm.equity, inflation_mean,
  volterm.inflation , cholesky.out, termStruct.extension)
indexes <- c("Short Rate", "Credit Spread", "Total Equity Return", 
  "Inflation Rate")
xremove <- c(3,0,0,0)
ylim <- list(sr=c(0,0.25), cs=c(-0.02,0.05), ter=c(-0.5,1.9), ir=c(-0.35,0.6))
for(j in 1:4) {
  file=paste("esgafile", j, ".pdf", sep="")  
  pdf(file=file, width=6, height=6)  
  plot(x=seq(1,100-xremove[j],1),y=esga.out[[j]][1,1:(100-xremove[j])],
    xlab="Time", ylab=indexes[j], type='l', col=1, ylim=ylim[[j]], 
    main=paste("ESG: ", indexes[j]))
  for(i in 2:5)
    lines(x=seq(1,100-xremove[j],1),
      y=esga.out[[j]][i,1:(100-xremove[j])],xlab="Time", ylab=indexes[j], 
      type='l', col=i)
  dev.off()  
  cat("\\includegraphics{", file, "}\n\n", sep="")  
}
@

Before summarizing the stochastic scenarios, the deterministic scenario
for interest rates with terms 1, 2, 3, 5, 7, 10, 15, 20, 30, inflation rates,
credit rates, an equity index and a bond index are shown in plots below.
The deterministic scenario (unlike the stochastic scenarios) does not 
involve generating random numbers.

<<echo=TRUE, results=tex>>=
determScenario.out <- determScenario(termStruct.out)
plotNames <- names(determScenario.out)
ylim <- list(term1=c(0,0.18), term2=c(0,0.18), term3=c(0,0.18), 
  term5=c(0,0.17), term7=c(0.01,0.16), term10=c(0.01,0.15), 
  term15=c(0.01,0.15), term20=c(0.01,0.15), term30=c(0.02,0.15),
  inflation=c(-0.35,0.6), credit=c(-0.04,0.05), total=c(0,0.20), 
  equity=c(-0.5,150), bond=c(0,150))
xremove <- c(3,3+(2-1),3+(3-1),3+(5-1),3+(7-1),3+(10-1),3+(15-1),3+(20-1),
  3+(30-1),0,0,0,0,0)
for(j in 1:14) {
  file=paste("deterfile", j, ".pdf", sep="")  
  pdf(file=file, width=6, height=6)  
  plot(x=seq(1,100-xremove[j],1),y=determScenario.out[[j]][1:(100-xremove[j])],
    xlab="Time", ylab=plotNames[j], type='l', col=1, ylim=ylim[[j]], 
    main=paste("Deterministic summary: ", plotNames[j]))
  dev.off()  
  cat("\\includegraphics{", file, "}\n\n", sep="")  
}
@

Finally, the first \textit{three} scenarios for interest rates with terms 1, 2, 3, 
5, 7, 10, 15, 20, 30, inflation rates, credit rates, total equity return,
an equity index and a bond index are shown in plots below.

<<echo=TRUE, results=tex>>=
stochasticScenarios.out <- stochasticScenarios(hw.out,termStruct.extension,
  srinput, esga.out)
plotNames <- names(stochasticScenarios.out)
ylim <- list(term1=c(0,0.20), term2=c(0,0.20), term3=c(0,0.20), 
  term5=c(0,0.20), term7=c(0.01,0.20), term10=c(0.01,0.20), 
  term15=c(0.01,0.20), term20=c(0.01,0.20), term30=c(0.02,0.20),
  inflation=c(-0.35,0.6), credit=c(-0.04,0.05), total=c(0,0.20), 
  equity=c(0,300), bond=c(0,10000))
xremove <- c(3,3+(2-1),3+(3-1),3+(5-1),3+(7-1),3+(10-1),3+(15-1),
  3+(20-1),3+(30-1),0,0,3,0,0)
for(j in 1:14) {
  file=paste("stocfile", j, ".pdf", sep="")  
  pdf(file=file, width=6, height=6)  
  plot(x=seq(1,100-xremove[j],1),
    y=stochasticScenarios.out[[j]][1,1:(100-xremove[j])], xlab="Time", 
    ylab=plotNames[j], type='l', col=1, ylim=ylim[[j]], 
    main=paste("Stochastic summary: ", plotNames[j]))
  for(i in 2:3)
    lines(x=seq(1,100-xremove[j],1),
      y=stochasticScenarios.out[[j]][i,1:(100-xremove[j])], xlab="Time", 
      ylab=plotNames[j], type='l', col=i)
  dev.off()  
  cat("\\includegraphics{", file, "}\n\n", sep="")  
}
@

\end{document}